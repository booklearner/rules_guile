load("//guile/internal:toolchain.bzl", "guile_toolchain")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

def guile_repository_impl(repository_ctx):
    repository_ctx.download_and_extract(
        repository_ctx.attr.url,
        sha256 = repository_ctx.attr.sha256,
        strip_prefix = repository_ctx.attr.strip_prefix,
    )

    configure_make(
        name = "guile_configure_make",
        # TODO: how do we get the root workspace directory?
        #       probably want the prefix to be something like
        #       <workspace_root>/guile so we can register the
        #       guile_toolchain with the built binaries in a
        #       deterministic way
        configure_prefix = "",
    )

    native.register_toolchains("@guile_toolchains//:guile_toolchain")
    native.toolchain(
        name = "guile_toolchain",
        toolchain = "@rules_guile//:guile_toolchain",
        toolchain_type = "@rules_guile//guile:toolchain_type",
    )

    starlark_content = """# Generated by guile_repository
def _resolved_toolchain_impl(ctx):
    toolchain_info = ctx.toolchains["@rules_guile//guile:toolchain_type"]
    return [
        toolchain_info,
        toolchain_info.guile,
        toolchain_info.guild,
        toolchain_info.guile_info,
    ]

resolved_toolchain = rule(
    implementation = _resolved_toolchain_impl,
    toolchains = ["@rules_guile//guile:toolchain_type"],
    incompatible_use_toolchain_transition = True,
)
"""
    repository_ctx.file("defs.bzl", starlark_content)

    build_content = """# Generated by guile_repository
load(":defs.bzl", "resolved_toolchain")
resolved_toolchain(name = "resolved_toolchain", visibility = ["//visibility:public"])

toolchain(
    name = "guile_toolchain",
    toolchain = "@rules_guile//:guile_toolchain",
    toolchain_type = "@rules_guile//guile:toolchain_type",
)
"""
    repository_ctx.file("BUILD.bazel", build_content)

guile_repository = repository_rule(
    attrs = {
        "url": attr.string(
            default = "https://ftp.gnu.org/gnu/guile/guile-3.0.8.tar.xz",
            doc = "url to download the guile release from",
        ),
        "sha256": attr.string(
            default = "daa7060a56f2804e9b74c8d7e7fe8beed12b43aab2789a38585183fcc17b8a13",
            doc = "the sha256 value of the release archive",
        ),
    },
    implementation = guile_repository_impl,
)
